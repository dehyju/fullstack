name: Simple Release Notes

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release-notes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get previous tag
        id: prev_tag
        run: |
          git fetch --tags
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          echo "PREV_TAG=$PREV_TAG" >> $GITHUB_ENV
          echo "Previous tag: $PREV_TAG"

      - name: Get commits since previous tag
        id: commits
        run: |
          if [ -z "$PREV_TAG" ]; then
            git log --pretty=format:"- %s (%h)" > commits.txt
          else
            git log $PREV_TAG..HEAD --pretty=format:"- %s (%h)" > commits.txt
          fi
          echo "Commits:"
          cat commits.txt
          {
            echo "commits<<EOF"
            cat commits.txt
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Get issues closed by commits
        id: issues
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Extract issue numbers from commit messages (looking for #123 style)
          ISSUE_NUMBERS=$(git log $PREV_TAG..HEAD --grep='#' --pretty=format:%s | grep -oE '#[0-9]+' | tr -d '#' | sort -u)
          echo "Found issues referenced in commits: $ISSUE_NUMBERS"

          if [ -z "$ISSUE_NUMBERS" ]; then
            echo "issues<<EOF" >> $GITHUB_OUTPUT
            echo "No issues referenced in commits." >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Fetch issue titles using GitHub API
          ISSUE_LIST=""
          for issue in $ISSUE_NUMBERS; do
            TITLE=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/repos/${GITHUB_REPOSITORY}/issues/$issue | jq -r .title)
            ISSUE_LIST+="- #$issue $TITLE\n"
          done

          echo -e "issues<<EOF" >> $GITHUB_OUTPUT
          echo -e "$ISSUE_LIST" >> $GITHUB_OUTPUT
          echo -e "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Commits
            ${{ steps.commits.outputs.commits }}

            ## Closed Issues
            ${{ steps.issues.outputs.issues }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
